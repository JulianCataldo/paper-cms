/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Name = string;
export type URL = string;
export type Description = string;
export type Name1 = string;
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "HasPart".
 */
export type Parts = {
  $ref: string;
}[];
export type Text = string;
export type Name2 = string;
export type GivenName = string;
export type FamilyName = string;
export type Email = string;
export type Name3 = string;
export type AssociatedMedias = {
  $ref: string;
}[];
export type ArticleBody = string;
export type AssociatedMedias1 = {
  $ref: string;
}[];
export type ArticleBody1 = string;
export type AssociatedMedias2 = {
  $ref: string;
}[];
export type FileURL = string;
/**
 * The name of a friend
 */
export type Name4 = string;
export type Email1 = string;
export type Brand = string;
export type Headline = string;
export type AltHeadline = string;
/**
 * Subject(s)
 */
export type SectionS = string[];
/**
 * Keywords(s)
 */
export type Tags = string[];
export type Parts1 = {
  $ref: string;
}[];
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "NewsArticle".
 */
export type NewsArticle = Article;
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "AnalysisNewsArticle".
 */
export type AnalysisNewsArticle = Article;
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "AskPublicNewsArticle".
 */
export type AskPublicNewsArticle = Article;
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "BackgroundNewsArticle".
 */
export type BackgroundNewsArticle = Article;
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "OpinionNewsArticle".
 */
export type OpinionNewsArticle = Article;
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "ReportageNewsArticle".
 */
export type ReportageNewsArticle = Article;
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "ReviewNewsArticle".
 */
export type ReviewNewsArticle = Article;
export type UserName = string;
export type Password = string;
export type IsActuallyRented = boolean;
export type AmenityFeatureS = ("TV" | "Beamer" | "Wifi" | "Ethernet" | "Snacks" | "PA Speakers")[];
export type FloorSurfaceAreaInM = number;
export type MaximumAttendeeCapacity = number;
export type PermittedUsage = string;
export type IsAccessibleForFree = boolean;
export type PublicAccess = boolean;
export type SmokingAllowed = boolean;
export type LeaseLength = number;
export type PetsAllowed = boolean;
export type Address = string;
export type TelephoneNumber = number;

export interface AllDefs {
  [k: string]: unknown;
}
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "Thing".
 */
export interface Thing {
  name?: Name;
  url?: URL;
  description?: Description;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "WebPage".
 */
export interface WebPage {
  url?: URL;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "WebSite".
 */
export interface WebSite {
  name: Name1;
  url: URL;
  description?: Description;
  hasPart?: Parts;
  _meta: Metadata;
}
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "Meta".
 */
export interface Metadata {
  created?: string;
  updated?: string;
  deleted?: string;
}
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "WebPageElement".
 */
export interface WebPageElement {
  text?: Text;
  name?: Name2;
  _meta: Metadata;
}
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "Person".
 */
export interface Person {
  givenName?: GivenName;
  familyName?: FamilyName;
  email?: Email;
  _meta: Metadata;
}
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "CreativeWork".
 */
export interface CreativeWork {
  name?: string;
  author?: {
    $ref: string;
  }[];
  _meta: Metadata;
}
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "Collection".
 */
export interface Collection {
  name?: Name3;
  associatedMedia?: AssociatedMedias;
  _meta: Metadata;
}
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "SocialMediaPosting".
 */
export interface SocialMediaPosting {
  articleBody?: ArticleBody;
  sharedContent?: AssociatedMedias1;
  _meta: Metadata;
}
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "DiscussionForumPosting".
 */
export interface DiscussionForumPosting {
  articleBody?: ArticleBody1;
  sharedContent?: AssociatedMedias2;
  _meta: Metadata;
}
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "MediaObject".
 */
export interface MediaObject {
  contentUrl?: FileURL;
  _meta: Metadata;
}
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "Organization".
 */
export interface Organization {
  name?: Name4;
  email?: Email1;
  brand?: Brand;
  _meta: Metadata;
}
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "Article".
 */
export interface Article {
  headline?: Headline;
  alternativeHeadline?: AltHeadline;
  articleSection?: SectionS;
  keywords?: Tags;
  hasPart?: Parts1;
  _meta: Metadata;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "User".
 */
export interface User {
  userName?: UserName;
  password?: Password;
  _meta: Metadata;
}
/**
 * This interface was referenced by `AllDefs`'s JSON-Schema
 * via the `definition` "Room".
 */
export interface Room {
  "x-rented"?: IsActuallyRented;
  name?: Name;
  description?: Description;
  amenityFeature?: AmenityFeatureS;
  floorSize?: FloorSurfaceAreaInM;
  maximumAttendeeCapacity?: MaximumAttendeeCapacity;
  permittedUsage?: PermittedUsage;
  isAccessibleForFree?: IsAccessibleForFree;
  publicAccess?: PublicAccess;
  smokingAllowed?: SmokingAllowed;
  leaseLength?: LeaseLength;
  petsAllowed?: PetsAllowed;
  address?: Address;
  telephone?: TelephoneNumber;
  _meta: Metadata;
}
